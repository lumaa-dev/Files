name: Upload Release

on:
  workflow_dispatch:
    inputs:
      # version:
      #   description: 'Version of this release'
      #   required: true
      #   default: ''
      #   type: string

      upload_perso:
        description: 'Upload on Lumaa files?'
        required: false
        default: true
        type: boolean

      upload_github:
        description: 'Upload on GitHub?'
        required: false
        default: true
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Create default config 
        if: ${{ inputs.upload_github == true }}
        run: echo "{\"password\":\"GitHub_@ctions\",\"obfuscateName\":true}" > server/config.json

      - name: Install project dependencies and build
        if: ${{ inputs.upload_github == true }}
        run: npm install && npm run build

      - name: Extract version from CHANGELOGS.md
        id: version
        run: |
          VERSION=$(grep -m1 '^# ' CHANGELOGS.md | sed 's/^# //')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "FILE=Files-v$VERSION.zip" >> $GITHUB_ENV

      - name: Create release file path
        if: ${{ inputs.upload_github == true }}
        run: |
          zip -r "$FILE" .output/*

      - name: Extract changelog section
        if: ${{ inputs.upload_github == true }}
        run: |
          awk '
            BEGIN { inside=0 }
            /^# / {
              if (inside) exit
              inside=1
              next
            }
            inside { print }
          ' CHANGELOGS.md > extracted_changelog.md

      - name: Create Release
        if: ${{ inputs.upload_github == true }}
        id: "create_release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          body_path: extracted_changelog.md

      - name: Upload Release Asset
        if: ${{ inputs.upload_github == true }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.FILE }}
          asset_name: ${{ env.FILE }}
          asset_content_type: application/zip

      - name: Upload on Lumaa's Files
        if: ${{ inputs.upload_perso == true }}
        run: |
          echo "{\"password\":\"${{ secrets.LUMAA_FILES_PASS }}\",\"obfuscateName\":false}" > server/config.json
          npm install && npm run build && zip -r "$FILE" .output/*
          curl -X POST https://files.lumaa.fr/api/upload \
                    -H "Authorization: ${{ secrets.LUMAA_FILES_PASS }}" \
                    -F "file=@$FILE"